2024-03-22 11:32:25.137 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 1728 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 11:32:25.140 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 11:32:26.511 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 11:32:26.514 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 11:32:26.591 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61ms. Found 0 repository interfaces.
2024-03-22 11:32:26.982 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$14144369] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.109 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ee638f0d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.200 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84d51e3c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.219 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$f0551fe5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.463 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e919d739] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.481 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.485 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.572 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d65c7a4b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.582 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c29d8ad6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.590 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.596 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 11:32:27.602 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 11:32:27.784 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 11:32:27.784 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 11:32:27.784 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 11:32:27.784 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 11:32:27.784 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:27.802 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.886 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.920 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.921 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.929 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.931 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.933 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.977 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:28.994 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.047 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.049 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.077 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.079 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.138 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$e0689dcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$92b55fe6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4dcc45d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.189 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.196 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$7497bd03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$c2743b5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.219 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.221 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.226 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.251 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.300 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:32:29.663 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 11:32:29.674 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 11:32:29.678 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 11:32:29.678 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 11:32:29.682 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 11:32:29.804 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 11:32:29.804 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4592 ms
2024-03-22 11:32:30.484 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 11:32:30.485 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 11:32:31.071 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 11:32:31.943 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 11:32:31.951 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 11:32:31.951 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 11:32:31.952 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 11:32:31.952 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 11:32:31.952 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 11:32:31.953 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 11:32:31.953 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3ccfac29
2024-03-22 11:32:31.971 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 11:32:32.012 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 11:32:32.067 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 11:32:32.067 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 11:32:32.077 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 11:32:32.085 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 11:32:32.090 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 11:32:32.095 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 11:32:32.097 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 7.369 seconds (JVM running for 8.292)
2024-03-22 11:32:32.104 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 11:32:32.105 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 11:32:32.105 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 11:32:32.150 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 11:32:32.165 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:32:32.226 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 1 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 11:32:32.238 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 11:32:32.251 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 11:32:32.255 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:32:32.258 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 11:32:32.259 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 11:32:32.262 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 11:32:32.265 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:32:32.267 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 11:32:32.269 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 11:32:32.272 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 11:32:32.275 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:32:32.277 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 11:32:32.280 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 11:32:32.281 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 11:32:32.285 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:32:32.287 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 11:32:32.290 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 11:32:32.291 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 11:32:32.294 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:32:32.296 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 11:32:32.299 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 11:32:32.300 febs [main] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 11:32:32.301 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 11:32:32.301 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 11:32:32.301 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 11:32:32.301 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 11:32:32.301 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T11:32:32.301
2024-03-22 11:32:32.516 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 11:32:32.516 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 11:32:32.524 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2024-03-22 11:32:32.525 febs [RMI TCP Connection(1)-192.168.1.5] INFO  p6spy - 2024-03-22 11:32:32 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 11:39:07.465 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:39:07.465 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:39:07.465 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:39:07.495 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 7 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 11:39:07.510 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 13 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 11:39:07.514 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 11:39:07.519 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 11:39:07.524 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 11:39:07.526 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 11:39:07.557 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 35 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 11:39:07.559 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:39:07.560 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:39:07.563 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 11:39:07.565 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:39:07 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'system' group by days;
2024-03-22 11:42:36.920 febs [http-nio-9527-exec-10] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 11:42:36.947 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:42:36 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T11:42:36.929+0800' WHERE username = 'admin';
2024-03-22 11:42:36.949 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:42:36 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:42:36.962 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:42:36 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-03-22T11:42:36.956+0800', '', '127.0.0.1' );
2024-03-22 11:42:36.990 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:42:36.999 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:42:36 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-03-22 11:42:37.210 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:42:37.210 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:42:37.210 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:42:37.215 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 11:42:37.215 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 11:42:37.217 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 11:42:37.217 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:42:37.219 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:42:37.219 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 11:42:37.222 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 11:42:37.222 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 11:42:37.225 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 11:42:37.227 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 11:42:37.230 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:42:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 11:42:51.679 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:42:51.679 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:42:51.687 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:42:51 | 耗时 1 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:42:51.723 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:42:51 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:42:51.727 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:42:51 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:44:46.805 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:44:46.805 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:44:46.810 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:44:46 | 耗时 1 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2024-03-22 11:44:46.815 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:44:46 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2024-03-22 11:44:46.817 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:44:46 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 LIMIT 0,10;
2024-03-22 11:44:47.738 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:44:47.745 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:44:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM property_item pi WHERE 1 = 1;
2024-03-22 11:44:47.746 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:44:47 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.name, pi.price, pi.type, pi.unit, pi.create_date AS createDate FROM property_item pi WHERE 1 = 1 LIMIT 0,10;
2024-03-22 11:44:48.648 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:44:48.648 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:44:48.651 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:44:48 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:44:48.653 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:44:48 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:44:48.654 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:44:48 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:45:38.097 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:45:38.101 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 11:45:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:45:38.103 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 11:45:38 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:45:39.614 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:45:39.619 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:45:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:45:39.620 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:45:39 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:46:03.719 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 11:46:03.723 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T11:46:03.720+0800' WHERE username = 'fank';
2024-03-22 11:46:03.725 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:46:03.732 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'fank', '2024-03-22T11:46:03.729+0800', '', '127.0.0.1' );
2024-03-22 11:46:03.739 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 11:46:03.752 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:03.755 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank') order by m.order_num;
2024-03-22 11:46:03.881 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:03.881 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:03.881 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:03.884 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 11:46:03.885 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date,email FROM owner_info WHERE user_id = 14;
2024-03-22 11:46:03.886 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:46:03.887 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:46:03.888 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info WHERE owner_id = 1;
2024-03-22 11:46:03.888 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 11:46:03.890 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'fank' group by days;
2024-03-22 11:46:03.891 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
SELECT on2.allPrice - on1.paid AS unpaid, on3.*, on4.* FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS paid FROM payment_manage pm, payment_record pr, houses_info hi WHERE hi.owner_id = 1 and pr.payment_id = pm.id and hi.id = pm.houses_id) AS on1, (SELECT SUM( pm.price ) AS allPrice FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1) AS on2, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS electricity FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 1) AS on3, (SELECT IFNULL(SUM( pm.dosage ) ,0) AS water FROM payment_manage pm LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) WHERE hi.owner_id = 1 AND pm.type = 2) AS on4;
2024-03-22 11:46:03.893 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 11:46:03.897 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:46:03 | 耗时 1 ms | SQL 语句：
SELECT DATE_FORMAT( spo.days, '%m-%d' ) AS days, IFNULL(er.temperature,0) AS temperature FROM ( SELECT DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION SELECT DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION SELECT DATE_SUB( curdate(), INTERVAL + 6 DAY )) spo LEFT JOIN epidemic_register er ON ( DATE_FORMAT( er.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )) GROUP BY days ORDER BY days ASC;
2024-03-22 11:46:14.838 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:14.838 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:14.840 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:46:14 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:46:14.842 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:46:14 | 耗时 2 ms | SQL 语句：
SELECT hi.id, hi.address, hi.building_id AS buildingId, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, hi.staff_id AS staffId, hi.owner_id AS ownerId, hi.buyer, hi.create_date AS createDate, oi.name, oi.phone, oi.id_number AS idNumber, bi.name AS buildName, bi.address AS buildAddress, bi.street, bi.community, bi.usage_area AS buildUsageArea, bi.surface_area AS buildSurfaceArea, bi.type, bi.rooms AS buildRooms, bi.units, bi.layers, bi.images, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage, ri.id AS repairId, ri.repair_status AS repairStatus FROM houses_info hi LEFT JOIN building_info bi ON ( bi.id = hi.building_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN worker_info wi ON (wi.id = hi.staff_id) LEFT JOIN repair_info ri ON (ri.houses_id = hi.id) AND ri.repair_status != 2 WHERE 1 = 1 AND oi.user_id = 14;
2024-03-22 11:46:23.739 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:46:23.744 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:46:23 | 耗时 2 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.id = 4;
2024-03-22 11:51:56.747 febs [http-nio-9527-exec-8] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 11:51:56.751 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T11:51:56.749+0800' WHERE username = 'admin';
2024-03-22 11:51:56.753 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:51:56.776 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-03-22T11:51:56.756+0800', '', '127.0.0.1' );
2024-03-22 11:51:56.792 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:51:56.795 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-03-22 11:51:56.942 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:51:56.942 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:51:56.942 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:51:56.945 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 11:51:56.945 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 11:51:56.947 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 11:51:56.947 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:51:56.948 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 11:51:56.948 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 11:51:56.949 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 11:51:56.949 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 11:51:56.952 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 11:51:56.955 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 11:51:56.958 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 11:51:56 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 11:51:59.158 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:51:59.167 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:51:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM ( SELECT oi.id, oi.name, oi.phone, oi.email, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT(hi.owner_id) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON (tu.USER_ID = oi.user_id) LEFT JOIN houses_info hi ON (hi.owner_id = oi.id) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC ) TOTAL;
2024-03-22 11:51:59.168 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:51:59 | 耗时 0 ms | SQL 语句：
SELECT oi.id, oi.name, oi.phone, oi.email, oi.images, oi.id_number AS idNumber, oi.create_date AS createDate, oi.user_id AS userId, tu.USERNAME AS account, tu.LAST_LOGIN_TIME AS lastTime, COUNT( hi.owner_id ) AS housesNum FROM owner_info oi LEFT JOIN t_user tu ON ( tu.USER_ID = oi.user_id ) LEFT JOIN houses_info hi ON ( hi.owner_id = oi.id ) WHERE 1 = 1 GROUP BY oi.id ORDER BY OI.create_date DESC LIMIT 0,10;
2024-03-22 11:52:01.351 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:52:01.351 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:52:01.354 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:52:01 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:52:01.355 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:52:01 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:52:01.356 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:52:01 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:52:11.572 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:52:11.576 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:52:11 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:52:11.578 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:52:11 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:52:36.596 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:52:36.600 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:52:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:52:36.601 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:52:36 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:53:36.187 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:53:36.193 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:53:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_status = 2;
2024-03-22 11:53:36.194 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:53:36 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.repair_status = 2 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:53:38.975 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:53:38.980 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:53:38 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_status = 1;
2024-03-22 11:53:38.981 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:53:38 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.repair_status = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:53:41.246 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:53:41.249 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:53:41 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:53:41.251 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 11:53:41 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:53:54.600 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 11:53:54.600 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2024-03-22 11:53:54.601 febs [Thread-19] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2024-03-22 11:53:54.601 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2024-03-22 11:53:54.601 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 11:53:54.601 febs [Thread-19] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2024-03-22 11:53:54.607 febs [Thread-19] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2024-03-22 11:53:54.610 febs [Thread-19] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2024-03-22 11:53:54.610 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2024-03-22 11:53:54.612 febs [Thread-19] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2024-03-22 11:54:24.979 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 16464 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 11:54:24.982 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 11:54:25.791 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 11:54:25.793 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 11:54:25.838 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35ms. Found 0 repository interfaces.
2024-03-22 11:54:26.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$68efbbf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.140 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$433f0798] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.204 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.207 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9b096c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.224 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$45309870] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$3df54fc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.516 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$2b37f2d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$17790361] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.533 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 11:54:26.537 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 11:54:26.665 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 11:54:26.665 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 11:54:26.665 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 11:54:26.665 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 11:54:26.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:26.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.182 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.187 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.189 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.205 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.206 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.210 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.211 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.212 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.239 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.272 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.288 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.337 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.352 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$35441658] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$e790d871] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.356 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a2a7be60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.362 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.366 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$c973358e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.372 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$174fb3e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.381 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.386 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.412 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 11:54:27.668 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 11:54:27.677 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 11:54:27.680 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 11:54:27.680 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 11:54:27.684 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 11:54:27.789 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 11:54:27.790 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2749 ms
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 11:54:28.184 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 11:54:28.746 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 11:54:29.525 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 11:54:29.532 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 11:54:29.532 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 11:54:29.533 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 11:54:29.533 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 11:54:29.533 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 11:54:29.533 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 11:54:29.533 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@1ff542a3
2024-03-22 11:54:29.548 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 11:54:29.585 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 11:54:29.637 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 11:54:29.637 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 11:54:29.646 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 11:54:29.654 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 11:54:29.660 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 11:54:29.665 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 11:54:29.667 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.028 seconds (JVM running for 5.68)
2024-03-22 11:54:29.672 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 11:54:29.673 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 11:54:29.673 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 11:54:29.713 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 11:54:29.725 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:54:29.773 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 11:54:29.783 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 11:54:29.794 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 11:54:29.798 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:54:29.801 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 11:54:29.803 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 11:54:29.806 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 11:54:29.809 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:54:29.811 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 11:54:29.813 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 11:54:29.816 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 11:54:29.818 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:54:29.820 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 11:54:29.823 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 11:54:29.825 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 11:54:29.829 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:54:29.832 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 11:54:29.834 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 11:54:29.835 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 11:54:29.837 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 11:54:29.839 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 11:54:29.841 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 11:54:29.842 febs [main] INFO  p6spy - 2024-03-22 11:54:29 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 11:54:29.843 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 11:54:29.843 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 11:54:29.843 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 11:54:29.843 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 11:54:29.843 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T11:54:29.843
2024-03-22 11:54:30.151 febs [RMI TCP Connection(3)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 11:54:30.151 febs [RMI TCP Connection(3)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 11:54:30.159 febs [RMI TCP Connection(3)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2024-03-22 11:54:30.160 febs [RMI TCP Connection(2)-192.168.1.5] INFO  p6spy - 2024-03-22 11:54:30 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 11:55:27.525 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:55:27.585 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 11:55:27 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_status = 0;
2024-03-22 11:55:28.888 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:55:28.895 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:55:28 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_status = 0;
2024-03-22 11:55:29.786 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:55:29.791 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 11:55:29 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_status = 0;
2024-03-22 11:55:35.726 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:55:35.731 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:55:35 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:55:35.735 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:55:35 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:55:39.916 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:55:39.921 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:55:39 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_status = 2;
2024-03-22 11:55:39.922 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 11:55:39 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.repair_status = 2 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:55:42.231 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:55:42.235 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:55:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:55:42.236 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:55:42 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:57:31.515 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:57:31.528 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:57:31 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM worker_info wi WHERE 1 = 1;
2024-03-22 11:57:31.530 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:57:31 | 耗时 0 ms | SQL 语句：
SELECT wi.id, wi.name, wi.phone, wi.image, wi.type, wi.create_date AS createDate FROM worker_info wi WHERE 1 = 1 LIMIT 0,10;
2024-03-22 11:57:33.025 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:57:33.025 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:57:33.029 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:57:33 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:57:33.031 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 11:57:33 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:57:33.042 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:57:33 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:58:12.754 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:58:12.754 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:58:12.757 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 11:58:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:58:12.758 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:58:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:58:12.759 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 11:58:12 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 11:59:08.898 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:59:08.898 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 11:59:08.901 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 11:59:08 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 11:59:08.902 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:59:08 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 11:59:08.904 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 11:59:08 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 12:00:24.120 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 12:00:24.120 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2024-03-22 12:00:24.121 febs [Thread-14] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2024-03-22 12:00:24.121 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2024-03-22 12:00:24.121 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 12:00:24.121 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2024-03-22 12:00:24.130 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2024-03-22 12:00:24.133 febs [Thread-14] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2024-03-22 12:00:24.133 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2024-03-22 12:00:24.136 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2024-03-22 12:00:26.828 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 7156 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 12:00:26.831 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 12:00:27.542 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 12:00:27.543 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 12:00:27.588 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35ms. Found 0 repository interfaces.
2024-03-22 12:00:27.804 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$35012ea0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:27.889 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:27.946 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$f507a44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:27.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:27.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:27.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a5c20973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:27.969 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$11420b1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$a06c270] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.199 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.202 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.259 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.263 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$f7496582] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e38a760d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.276 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.279 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 12:00:28.285 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 12:00:28.414 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 12:00:28.414 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 12:00:28.414 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 12:00:28.414 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 12:00:28.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.423 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.428 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.886 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.891 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.893 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.894 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.909 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.914 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.915 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.970 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.972 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.987 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:28.988 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.004 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.005 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.007 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.024 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.025 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.026 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.036 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.052 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1558904] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.054 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b3a24b1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.056 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6eb9310c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.062 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.067 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9584a83a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.070 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.072 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e3612693] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.080 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.081 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.086 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.115 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 12:00:29.359 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 12:00:29.368 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 12:00:29.371 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 12:00:29.372 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 12:00:29.375 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 12:00:29.482 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 12:00:29.482 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2597 ms
2024-03-22 12:00:29.852 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 12:00:29.852 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 12:00:29.853 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 12:00:29.853 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 12:00:29.853 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 12:00:29.853 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 12:00:29.853 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 12:00:29.853 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 12:00:30.409 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 12:00:31.187 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 12:00:31.194 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 12:00:31.194 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 12:00:31.195 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 12:00:31.195 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 12:00:31.195 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 12:00:31.195 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 12:00:31.195 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@25b4754a
2024-03-22 12:00:31.212 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 12:00:31.251 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 12:00:31.304 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 12:00:31.304 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 12:00:31.314 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 12:00:31.321 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 12:00:31.326 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 12:00:31.331 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 12:00:31.333 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.85 seconds (JVM running for 5.41)
2024-03-22 12:00:31.339 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 12:00:31.340 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 12:00:31.340 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 12:00:31.381 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 12:00:31.393 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 12:00:31.445 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 12:00:31.456 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 12:00:31.468 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 12:00:31.472 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 12:00:31.474 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 12:00:31.477 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 12:00:31.480 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 12:00:31.483 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 12:00:31.485 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 12:00:31.488 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 12:00:31.490 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 12:00:31.493 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 12:00:31.495 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 12:00:31.498 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 12:00:31.499 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 12:00:31.503 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 12:00:31.505 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 12:00:31.506 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 12:00:31.507 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 12:00:31.509 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 12:00:31.511 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 12:00:31.512 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 12:00:31.513 febs [main] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 12:00:31.513 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 12:00:31.513 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 12:00:31.514 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 12:00:31.514 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 12:00:31.514 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T12:00:31.514
2024-03-22 12:00:31.875 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 12:00:31.875 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 12:00:31.883 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2024-03-22 12:00:31.884 febs [RMI TCP Connection(3)-192.168.1.5] INFO  p6spy - 2024-03-22 12:00:31 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 12:00:37.460 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:00:37.521 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 12:00:37 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_type = '1';
2024-03-22 12:00:37.525 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 12:00:37 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.repair_type = '1' ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 12:00:40.594 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:00:40.601 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 12:00:40 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_type = '2';
2024-03-22 12:00:42.485 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:00:42.492 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 12:00:42 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_type = 'undefined';
2024-03-22 12:10:12.007 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:10:12.007 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:10:12.012 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 12:10:12 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 12:10:12.014 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 12:10:12 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 12:10:12.028 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 12:10:12 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 12:10:50.696 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:10:50.696 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 12:10:50.699 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 12:10:50 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 12:10:50.701 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 12:10:50 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 12:10:50.702 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 12:10:50 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:00:31.318 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 13:41:03.800 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 13:41:03.946 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 13:41:03 | 耗时 2 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T13:41:03.929+0800' WHERE username = 'admin';
2024-03-22 13:41:03.952 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 13:41:03 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:41:03.975 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 13:41:03 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-03-22T13:41:03.964+0800', '', '127.0.0.1' );
2024-03-22 13:41:04.066 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:04.089 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 4 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-03-22 13:41:04.351 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:04.351 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:04.355 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:04.366 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 7 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 13:41:04.370 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 13:41:04.374 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 13:41:04.376 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 13:41:04.381 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 13:41:04.381 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 6 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 13:41:04.396 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 12 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 13:41:04.402 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 2 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 13:41:04.411 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 1 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 13:41:04.421 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 5 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 13:41:04.425 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 13:41:04 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 13:41:12.395 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:12.395 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:12.401 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 13:41:12 | 耗时 2 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 13:41:12.401 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 13:41:12 | 耗时 2 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:41:12.403 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 13:41:12 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:41:43.114 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:43.115 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:41:43.120 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:41:43 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 13:41:43.121 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 13:41:43 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:41:43.123 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 13:41:43 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:42:03.782 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:42:03.782 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:42:03.787 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 13:42:03 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 13:42:03.787 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 13:42:03 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:42:03.789 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 13:42:03 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:42:59.531 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:42:59.533 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:42:59.536 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 13:42:59 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 13:42:59.538 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:42:59 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:42:59.540 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 13:42:59 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:45:29.737 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 13:45:29.740 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2024-03-22 13:45:29.740 febs [Thread-14] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2024-03-22 13:45:29.740 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2024-03-22 13:45:29.741 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 13:45:29.741 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2024-03-22 13:45:29.753 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2024-03-22 13:45:29.758 febs [Thread-14] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2024-03-22 13:45:29.758 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2024-03-22 13:45:29.760 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2024-03-22 13:45:34.665 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 14004 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 13:45:34.667 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 13:45:35.410 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 13:45:35.411 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 13:45:35.462 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 39ms. Found 0 repository interfaces.
2024-03-22 13:45:35.708 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$130216ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:35.791 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:35.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ed516252] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:35.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:35.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:35.861 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$83c2f181] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:35.872 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$ef42f32a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e807aa7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.104 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.106 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.168 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$d54a4d90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.179 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$c18b5e1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.185 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.186 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.189 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 13:45:36.195 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 13:45:36.323 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 13:45:36.323 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 13:45:36.323 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 13:45:36.323 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 13:45:36.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.331 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.850 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.854 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.873 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.879 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.906 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.920 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.936 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.938 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.939 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.953 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.970 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.971 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.973 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.993 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.995 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:36.996 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.013 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.029 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$df567112] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.032 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$91a3332b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$4cba191a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.038 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.041 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$73859048] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.049 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$c1620ea1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.061 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.070 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.094 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.106 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:45:37.349 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 13:45:37.357 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 13:45:37.361 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 13:45:37.361 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 13:45:37.365 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 13:45:37.468 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 13:45:37.468 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2756 ms
2024-03-22 13:45:37.839 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 13:45:37.840 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 13:45:38.363 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 13:45:39.135 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 13:45:39.142 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 13:45:39.142 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 13:45:39.142 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 13:45:39.143 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 13:45:39.143 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 13:45:39.143 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 13:45:39.143 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@c4551c6
2024-03-22 13:45:39.158 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 13:45:39.193 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 13:45:39.246 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 13:45:39.246 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 13:45:39.255 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 13:45:39.262 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 13:45:39.267 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 13:45:39.272 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 13:45:39.274 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.961 seconds (JVM running for 5.519)
2024-03-22 13:45:39.280 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 13:45:39.281 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 13:45:39.281 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 13:45:39.319 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 13:45:39.331 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:45:39.380 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 13:45:39.390 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 13:45:39.402 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 13:45:39.406 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:45:39.409 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 13:45:39.411 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 13:45:39.414 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 13:45:39.417 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:45:39.419 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 13:45:39.421 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 13:45:39.423 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 13:45:39.426 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:45:39.428 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 13:45:39.431 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 13:45:39.433 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 13:45:39.437 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:45:39.440 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 13:45:39.443 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 13:45:39.444 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 13:45:39.446 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:45:39.448 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 13:45:39.449 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 13:45:39.450 febs [main] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 13:45:39.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 13:45:39.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 13:45:39.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 13:45:39.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 13:45:39.451 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T13:45:39.451
2024-03-22 13:45:39.705 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 13:45:39.705 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 13:45:39.713 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2024-03-22 13:45:39.714 febs [RMI TCP Connection(2)-192.168.1.5] INFO  p6spy - 2024-03-22 13:45:39 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 13:45:45.070 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:45:45.129 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 13:45:45 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:45:45.133 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 13:45:45 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:45:59.238 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:45:59.250 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 13:45:59 | 耗时 3 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.repair_type BETWEEN '2023-08-01' AND '2023-08-31';
2024-03-22 13:46:02.739 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:46:02.745 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 13:46:02 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:46:02.746 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 13:46:02 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:46:45.888 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 13:46:45.888 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2024-03-22 13:46:45.889 febs [Thread-14] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2024-03-22 13:46:45.889 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2024-03-22 13:46:45.889 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 13:46:45.889 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2024-03-22 13:46:45.895 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2024-03-22 13:46:45.898 febs [Thread-14] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2024-03-22 13:46:45.898 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2024-03-22 13:46:45.901 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2024-03-22 13:46:48.430 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 4048 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 13:46:48.433 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 13:46:49.073 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 13:46:49.075 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 13:46:49.120 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36ms. Found 0 repository interfaces.
2024-03-22 13:46:49.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$8dd53c78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6824881c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.472 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.474 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.480 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe96174b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.491 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$6a1618f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.695 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$62dad048] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.709 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.774 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$501d735a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.777 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.780 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$3c5e83e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.786 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.787 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.791 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 13:46:49.796 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 13:46:49.926 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 13:46:49.926 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 13:46:49.926 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 13:46:49.926 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 13:46:49.926 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.935 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:49.941 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.406 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.413 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.431 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.432 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.438 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.439 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.478 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.495 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.512 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.527 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.547 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.548 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.559 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.573 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$5a2996dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$c7658f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.577 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$c78d3ee4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.581 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.583 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.587 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ee58b612] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.591 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.593 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3c35346b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.602 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.605 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.622 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.631 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.640 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.649 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 13:46:50.860 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 13:46:50.868 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 13:46:50.871 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 13:46:50.871 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 13:46:50.875 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 13:46:50.975 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 13:46:50.975 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2490 ms
2024-03-22 13:46:51.366 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 13:46:51.368 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 13:46:51.882 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 13:46:52.697 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 13:46:52.704 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 13:46:52.704 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 13:46:52.705 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 13:46:52.705 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 13:46:52.705 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 13:46:52.705 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 13:46:52.705 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@218f2f51
2024-03-22 13:46:52.722 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 13:46:52.760 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 13:46:52.817 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 13:46:52.818 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 13:46:52.828 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 13:46:52.835 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 13:46:52.841 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 13:46:52.847 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 13:46:52.848 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.753 seconds (JVM running for 5.392)
2024-03-22 13:46:52.855 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 13:46:52.856 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 13:46:52.856 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 13:46:52.897 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 13:46:52.910 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:46:52.962 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 13:46:52.972 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 13:46:52.983 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 13:46:52.987 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:46:52.990 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 13:46:52.993 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 13:46:52.996 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 13:46:52.998 febs [main] INFO  p6spy - 2024-03-22 13:46:52 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:46:53.001 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 13:46:53.003 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 13:46:53.006 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 13:46:53.009 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:46:53.011 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 13:46:53.013 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 13:46:53.014 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 13:46:53.017 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:46:53.019 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 13:46:53.021 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 13:46:53.022 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 13:46:53.024 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 13:46:53.026 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 13:46:53.028 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 13:46:53.029 febs [main] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 13:46:53.029 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 13:46:53.029 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 13:46:53.029 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 13:46:53.029 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 13:46:53.029 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T13:46:53.029
2024-03-22 13:46:53.516 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 13:46:53.516 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 13:46:53.524 febs [RMI TCP Connection(1)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2024-03-22 13:46:53.524 febs [RMI TCP Connection(2)-192.168.1.5] INFO  p6spy - 2024-03-22 13:46:53 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 13:47:08.174 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:47:08.175 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:47:08.213 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 13:47:08 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,image,type,create_date FROM worker_info WHERE type = 2;
2024-03-22 13:47:08.239 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 13:47:08 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1;
2024-03-22 13:47:08.244 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 13:47:08 | 耗时 1 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 13:47:15.478 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 13:47:15.487 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 13:47:15 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM repair_info ri LEFT JOIN t_user tu ON (tu.USER_ID = ri.user_id) LEFT JOIN owner_info oi ON (oi.user_id = tu.USER_ID) LEFT JOIN houses_info hi ON (hi.id = ri.houses_id) LEFT JOIN worker_info wi ON (wi.id = ri.worker) WHERE 1 = 1 AND ri.create_date BETWEEN '2023-08-01' AND '2023-08-31';
2024-03-22 13:47:15.489 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 13:47:15 | 耗时 0 ms | SQL 语句：
SELECT ri.id, ri.code, ri.content, ri.images, ri.worker, ri.repair_type, ri.repair_status AS repairStatus, ri.create_date AS createDate, oi.name, oi.phone, tu.LAST_LOGIN_TIME AS lastTime, hi.address, hi.number, hi.floor, wi.name AS workerName, wi.phone AS workerPhone, wi.image AS workerImage FROM repair_info ri LEFT JOIN t_user tu ON ( tu.USER_ID = ri.user_id ) LEFT JOIN owner_info oi ON ( oi.user_id = tu.USER_ID ) LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id ) LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND ri.create_date BETWEEN '2023-08-01' and '2023-08-31' ORDER BY ri.create_date LIMIT 0,10;
2024-03-22 14:02:13.002 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2024-03-22 14:02:13.018 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:02:13 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE username = 'admin';
2024-03-22 14:02:19.516 febs [http-nio-9527-exec-6] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 14:02:19.528 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T14:02:19.520+0800' WHERE username = 'mrbird';
2024-03-22 14:02:19.529 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 14:02:19.542 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2024-03-22T14:02:19.535+0800', '', '127.0.0.1' );
2024-03-22 14:02:19.583 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:02:19.591 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2024-03-22 14:02:19.862 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:02:19.863 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:02:19.863 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:02:19.866 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 14:02:19.868 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:02:19.870 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:02:19.872 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 14:02:19.874 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 2 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 14:02:19.875 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2024-03-22 14:02:19.878 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 14:02:19.881 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 14:02:19.885 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 14:02:19.890 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 14:02:19.892 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:02:19 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 14:02:30.340 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:02:30.347 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 14:02:30 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2024-03-22 14:02:42.828 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:02:42.840 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 14:02:42 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2024-03-22 14:03:34.013 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:34.029 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:34 | 耗时 0 ms | SQL 语句：
INSERT INTO t_menu ( parent_id, menu_name, path, component, icon, type, order_num, create_time ) VALUES ( 139, '维修统计', '/manage/repairStatic', 'manage/repairStatic/RepairStatic', '', '0', 14.0, '2024-03-22T14:03:34.026+0800' );
2024-03-22 14:03:34.045 febs [asyncTaskExecutor-1] INFO  p6spy - 2024-03-22 14:03:34 | 耗时 2 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '新增菜单/按钮', 8, 'cc.mrbird.febs.system.controller.MenuController.addMenu()', ' menu: "Menu(menuId=166, parentId=139, menuName=维修统计, path=/manage/repairStatic, component=manage/repairStatic/RepairStatic, perms=null, icon=, type=0, orderNum=14.0, createTime=Fri Mar 22 14:03:34 CST 2024, modifyTime=null, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2024-03-22T14:03:34.040+0800', '' );
2024-03-22 14:03:34.193 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:34.197 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:34 | 耗时 1 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2024-03-22 14:03:36.078 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:36.091 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 14:03:36 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2024-03-22 14:03:36.092 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 14:03:36 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2024-03-22 14:03:37.847 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:37.851 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:03:37 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2024-03-22 14:03:37.876 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:37.883 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:03:37 | 耗时 0 ms | SQL 语句：
SELECT role_id,menu_id FROM t_role_menu WHERE role_id = '74';
2024-03-22 14:03:42.395 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:42.404 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 0 ms | SQL 语句：
SELECT user_id,role_id FROM t_user_role WHERE role_id IN ('74');
2024-03-22 14:03:42.408 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 2 ms | SQL 语句：
UPDATE t_role SET role_name='超级管理员', remark='', modify_time='2024-03-22T14:03:42.405+0800' WHERE ROLE_ID=74;
2024-03-22 14:03:42.413 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 2 ms | SQL 语句：
DELETE FROM t_role_menu WHERE role_id = 74;
2024-03-22 14:03:42.417 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 139 );
2024-03-22 14:03:42.419 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 140 );
2024-03-22 14:03:42.421 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 141 );
2024-03-22 14:03:42.423 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 142 );
2024-03-22 14:03:42.425 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 144 );
2024-03-22 14:03:42.428 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 145 );
2024-03-22 14:03:42.431 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 146 );
2024-03-22 14:03:42.432 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 147 );
2024-03-22 14:03:42.434 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 148 );
2024-03-22 14:03:42.436 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 149 );
2024-03-22 14:03:42.437 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 150 );
2024-03-22 14:03:42.439 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 160 );
2024-03-22 14:03:42.441 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 164 );
2024-03-22 14:03:42.444 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
INSERT INTO t_role_menu ( role_id, menu_id ) VALUES ( 74, 166 );
2024-03-22 14:03:42.445 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='13' ;
2024-03-22 14:03:42.447 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 14:03:42.448 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 14:03:42.452 febs [asyncTaskExecutor-2] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 0 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改角色', 51, 'cc.mrbird.febs.system.controller.RoleController.updateRole()', ' role: "Role(roleId=74, roleName=超级管理员, remark=, createTime=null, modifyTime=Fri Mar 22 14:03:42 CST 2024, createTimeFrom=null, createTimeTo=null, menuId=139,140,141,142,144,145,146,147,148,149,150,160,164,166)"', '127.0.0.1', '2024-03-22T14:03:42.450+0800', '' );
2024-03-22 14:03:42.485 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:42.493 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM t_role;
2024-03-22 14:03:42.494 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:03:42 | 耗时 0 ms | SQL 语句：
SELECT ROLE_ID,role_name,remark,create_time,modify_time FROM t_role LIMIT 0,10;
2024-03-22 14:03:47.684 febs [http-nio-9527-exec-7] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 14:03:47.688 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T14:03:47.685+0800' WHERE username = 'admin';
2024-03-22 14:03:47.689 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 14:03:47.694 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-03-22T14:03:47.692+0800', '', '127.0.0.1' );
2024-03-22 14:03:47.709 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:47.712 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-03-22 14:03:47.865 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:47.865 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:47.865 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:47.869 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 14:03:47.870 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:03:47.872 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:03:47.875 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 14:03:47.877 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 1 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 14:03:47.885 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 17 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 14:03:47.900 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 13 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 14:03:47.903 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 14:03:47.905 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 14:03:47.910 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 2 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 14:03:47.913 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 14:03:47 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 14:03:53.195 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:53.195 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:53.201 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 14:03:53 | 耗时 1 ms | SQL 语句：
SELECT ID,name,price,type,unit,create_date FROM property_item;
2024-03-22 14:03:53.205 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:03:53 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM payment_record pr LEFT JOIN payment_manage pm ON (pm.id = pr.payment_id) LEFT JOIN houses_info hi ON (hi.id = pm.houses_id) LEFT JOIN owner_info oi ON (oi.id = hi.owner_id) LEFT JOIN property_item pi ON (pi.id = pm.type) WHERE 1 = 1;
2024-03-22 14:03:53.206 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:03:53 | 耗时 0 ms | SQL 语句：
SELECT pr.id, pr.create_date AS createDate, pr.payment_type AS paymentType, pm.`year`, pm.`month`, pm.type, pm.price, pm.dosage, oi.`name`, oi.phone, oi.id_number AS idNumber, hi.address, hi.number, hi.floor, hi.usage_area AS usageArea, hi.surface_area AS surfaceArea, hi.nature, hi.rooms, pi.`name` AS propertyName, pi.price AS propertyPrice, pi.type AS propertyType, pi.unit AS propertyUnit FROM payment_record pr LEFT JOIN payment_manage pm ON ( pm.id = pr.payment_id ) LEFT JOIN houses_info hi ON ( hi.id = pm.houses_id ) LEFT JOIN owner_info oi ON ( oi.id = hi.owner_id ) LEFT JOIN property_item pi ON ( pi.id = pm.type ) WHERE 1 = 1 LIMIT 0,10;
2024-03-22 14:03:53.879 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:53.886 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM property_item pi WHERE 1 = 1;
2024-03-22 14:03:53.888 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:03:53 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.name, pi.price, pi.type, pi.unit, pi.create_date AS createDate FROM property_item pi WHERE 1 = 1 LIMIT 0,10;
2024-03-22 14:03:59.304 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 2 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 14:03:59.309 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T14:03:59.306+0800' WHERE username = 'mrbird';
2024-03-22 14:03:59.311 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 14:03:59.316 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'mrbird', '2024-03-22T14:03:59.313+0800', '', '127.0.0.1' );
2024-03-22 14:03:59.330 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:59.334 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird') order by m.order_num;
2024-03-22 14:03:59.489 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:59.489 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:59.489 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:03:59.492 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 14:03:59.492 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 14:03:59.493 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:03:59.493 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 14:03:59.494 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:03:59.494 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 14:03:59.495 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 14:03:59.495 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 14:03:59.496 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'mrbird' group by days;
2024-03-22 14:03:59.497 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 14:03:59.499 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:03:59 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 14:04:09.403 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:09.407 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:04:09 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2024-03-22 14:04:14.306 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:14.309 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:04:14 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu WHERE type = '0';
2024-03-22 14:04:21.242 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:21.248 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 1 ms | SQL 语句：
UPDATE t_menu SET parent_id=139, menu_name='维修统计', path='/manage/repairStatic', component='manage/repairStatic/RepairStatic', icon='laptop', type='0', order_num=14.0, modify_time='2024-03-22T14:04:21.245+0800' WHERE MENU_ID=166;
2024-03-22 14:04:21.249 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 0 ms | SQL 语句：
SELECT user_id FROM t_user_role WHERE role_id IN ( SELECT rm.role_id FROM t_role_menu rm WHERE rm.menu_id = '166' );
2024-03-22 14:04:21.251 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user WHERE USER_ID='13' ;
2024-03-22 14:04:21.252 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 14:04:21.253 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 14:04:21.259 febs [asyncTaskExecutor-3] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 1 ms | SQL 语句：
INSERT INTO t_log ( username, operation, time, method, params, ip, create_time, location ) VALUES ( 'mrbird', '修改菜单/按钮', 11, 'cc.mrbird.febs.system.controller.MenuController.updateMenu()', ' menu: "Menu(menuId=166, parentId=139, menuName=维修统计, path=/manage/repairStatic, component=manage/repairStatic/RepairStatic, perms=null, icon=laptop, type=0, orderNum=14.0, createTime=null, modifyTime=Fri Mar 22 14:04:21 CST 2024, createTimeFrom=null, createTimeTo=null)"', '127.0.0.1', '2024-03-22T14:04:21.256+0800', '' );
2024-03-22 14:04:21.393 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:21.396 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 14:04:21 | 耗时 0 ms | SQL 语句：
SELECT MENU_ID,parent_id,menu_name,path,component,perms,icon,type,order_num,create_time,modify_time FROM t_menu;
2024-03-22 14:04:26.478 febs [http-nio-9527-exec-3] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 3 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 14:04:26.483 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T14:04:26.480+0800' WHERE username = 'admin';
2024-03-22 14:04:26.485 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 14:04:26.490 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 1 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-03-22T14:04:26.487+0800', '', '127.0.0.1' );
2024-03-22 14:04:26.506 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:26.509 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-03-22 14:04:26.647 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:26.647 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:26.648 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:26.652 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 3 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 14:04:26.652 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 3 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 14:04:26.654 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:04:26.655 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:04:26.657 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 14:04:26.658 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 14:04:26.668 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 14 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 14:04:26.670 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 1 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 14:04:26.671 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 14:04:26.674 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 14:04:26.675 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 14:04:26 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 14:04:30.509 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:30.516 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:04:30 | 耗时 0 ms | SQL 语句：
SELECT COUNT(1) FROM bulletin_info bi WHERE 1 = 1;
2024-03-22 14:04:30.517 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 14:04:30 | 耗时 0 ms | SQL 语句：
SELECT bi.id, bi.title, bi.content, bi.date, bi.images, bi.publisher FROM bulletin_info bi WHERE 1 = 1 ORDER BY bi.date LIMIT 0,10;
2024-03-22 14:04:53.869 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:53.869 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:04:53.872 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 14:04:53 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date,email FROM owner_info;
2024-03-22 14:04:53.879 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 14:04:53 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi LEFT JOIN owner_info oi ON (oi.id = pi.owner_id) WHERE 1 = 1;
2024-03-22 14:04:53.880 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 14:04:53 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.`code`, pi.`name`, pi.address, pi.owner_id, pi.remark, pi.create_date, oi.`name` AS ownerName, oi.images, pi.park_size, pi.status, oi.phone FROM park_info pi LEFT JOIN owner_info oi ON ( oi.id = pi.owner_id ) WHERE 1 = 1 ORDER BY pi.create_date DESC LIMIT 0,10;
2024-03-22 14:13:13.301 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:13:13.301 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:13:13.301 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:13:13.305 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 1 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 14:13:13.305 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 14:13:13.307 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:13:13.307 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 1 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 14:13:13.309 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 14:13:13.309 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 14:13:13.311 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 14:13:13.311 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 14:13:13.313 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 14:13:13.314 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 1 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 14:13:13.316 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 14:13:13 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 14:13:47.295 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:13:47.295 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 14:18:06.141 febs [Thread-13] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 14:18:06.141 febs [Thread-13] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2024-03-22 14:18:06.142 febs [Thread-13] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2024-03-22 14:18:06.142 febs [Thread-13] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2024-03-22 14:18:06.142 febs [Thread-13] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 14:18:06.143 febs [Thread-13] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2024-03-22 14:18:06.150 febs [Thread-13] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2024-03-22 14:18:06.152 febs [Thread-13] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2024-03-22 14:18:06.153 febs [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2024-03-22 14:18:06.156 febs [Thread-13] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2024-03-22 19:23:37.880 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 15532 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 19:23:37.883 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 19:23:38.704 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 19:23:38.706 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 19:23:38.747 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29ms. Found 0 repository interfaces.
2024-03-22 19:23:38.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$3a8ef33e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$14de3ee2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.113 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.120 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ab4fce11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$16cfcfba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.355 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f94870e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.437 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$fcd72a20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.445 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$e9183aab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.456 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.459 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 19:23:39.464 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 19:23:39.607 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 19:23:39.607 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 19:23:39.607 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 19:23:39.607 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 19:23:39.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.616 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:39.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.111 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.117 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.144 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.157 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.173 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.174 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.175 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.190 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.191 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.208 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.209 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.211 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.228 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.229 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.230 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.240 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.255 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$6e34da2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.258 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b9300fbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.259 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$7446f5aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.269 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$9b126cd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.273 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.275 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e8eeeb31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.283 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.284 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.287 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.306 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.318 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.319 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.333 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:23:40.574 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 19:23:40.583 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 19:23:40.586 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 19:23:40.586 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 19:23:40.591 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 19:23:40.689 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 19:23:40.689 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2759 ms
2024-03-22 19:23:41.053 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 19:23:41.054 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 19:23:41.589 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 19:23:42.390 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 19:23:42.398 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 19:23:42.398 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 19:23:42.399 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 19:23:42.399 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 19:23:42.399 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 19:23:42.399 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 19:23:42.399 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@77ea960f
2024-03-22 19:23:42.415 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 19:23:42.450 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 19:23:42.501 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 19:23:42.501 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 19:23:42.510 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 19:23:42.517 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 19:23:42.523 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 19:23:42.527 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 19:23:42.529 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 5.03 seconds (JVM running for 5.65)
2024-03-22 19:23:42.536 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 19:23:42.536 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 19:23:42.537 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 19:23:42.583 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 19:23:42.599 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 5 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:23:42.652 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 19:23:42.665 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 3 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 19:23:42.677 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 2 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 19:23:42.681 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:23:42.683 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 19:23:42.685 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 19:23:42.688 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 19:23:42.691 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:23:42.693 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 19:23:42.696 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 1 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 19:23:42.698 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 19:23:42.700 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:23:42.702 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 19:23:42.705 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 19:23:42.706 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 19:23:42.709 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:23:42.711 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 19:23:42.713 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 19:23:42.714 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 19:23:42.716 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:23:42.718 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 19:23:42.719 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 19:23:42.720 febs [main] INFO  p6spy - 2024-03-22 19:23:42 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 19:23:42.721 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 19:23:42.721 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 19:23:42.721 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 19:23:42.721 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 19:23:42.721 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T19:23:42.721
2024-03-22 19:23:42.992 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 19:23:42.992 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 19:23:42.999 febs [RMI TCP Connection(2)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2024-03-22 19:23:43.001 febs [RMI TCP Connection(1)-192.168.1.5] INFO  p6spy - 2024-03-22 19:23:43 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 19:24:16.739 febs [http-nio-9527-exec-2] INFO  c.m.febs.common.aspect.LimitAspect - IP:127.0.0.1 第 1 次访问key为 [limit_login127.0.0.1]，描述为 [登录接口] 的接口
2024-03-22 19:24:16.819 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:24:16 | 耗时 1 ms | SQL 语句：
UPDATE t_user SET last_login_time='2024-03-22T19:24:16.802+0800' WHERE username = 'admin';
2024-03-22 19:24:16.821 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:24:16 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:24:16.835 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:24:16 | 耗时 2 ms | SQL 语句：
INSERT INTO t_login_log ( username, login_time, location, ip ) VALUES ( 'admin', '2024-03-22T19:24:16.828+0800', '', '127.0.0.1' );
2024-03-22 19:24:16.912 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:16.927 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 19:24:16 | 耗时 1 ms | SQL 语句：
select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on (rm.role_id = r.role_id) left join t_user_role ur on (ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.order_num;
2024-03-22 19:24:17.181 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:17.181 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:17.181 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:17.195 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 9 ms | SQL 语句：
select count(1) from t_login_log;
2024-03-22 19:24:17.198 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 0 ms | SQL 语句：
select count(1) from t_login_log where datediff(login_time,now())=0;
2024-03-22 19:24:17.200 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 0 ms | SQL 语句：
select count(distinct(ip)) from t_login_log where datediff(login_time,now())=0;
2024-03-22 19:24:17.202 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 group by days;
2024-03-22 19:24:17.205 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 0 ms | SQL 语句：
select date_format(l.login_time, '%m-%d') days, count(1) count from ( select * from t_login_log where date_sub(curdate(), interval 7 day) <= date(login_time) ) as l where 1 = 1 and l.username = 'admin' group by days;
2024-03-22 19:24:17.210 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 16 ms | SQL 语句：
SELECT COUNT( 1 ) FROM owner_info;
2024-03-22 19:24:17.225 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 13 ms | SQL 语句：
SELECT COUNT( 1 ) FROM houses_info;
2024-03-22 19:24:17.230 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 3 ms | SQL 语句：
SELECT * FROM ( SELECT IFNULL(SUM( pm.price ), 0) AS received FROM payment_manage pm ) AS on1, ( SELECT IFNULL(SUM( pm.price ),0) AS advance FROM payment_manage pm, payment_record pr WHERE pr.payment_id = pm.id ) AS on2;
2024-03-22 19:24:17.236 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 2 ms | SQL 语句：
SELECT ID,title,content,date,images,publisher FROM bulletin_info;
2024-03-22 19:24:17.243 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 3 ms | SQL 语句：
SELECT * FROM (SELECT IFNULL(SUM( pm.price ) ,0) AS month1 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '1', '-', '01' ), '%Y-%m')) AS on1, (SELECT IFNULL(SUM( pm.price ) ,0) AS month2 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '2', '-', '01' ), '%Y-%m')) AS on2, (SELECT IFNULL(SUM( pm.price ) ,0) AS month3 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '3', '-', '01' ), '%Y-%m')) AS on3, (SELECT IFNULL(SUM( pm.price ) ,0) AS month4 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '4', '-', '01' ), '%Y-%m')) AS on12, (SELECT IFNULL(SUM( pm.price ) ,0) AS month5 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '5', '-', '01' ), '%Y-%m')) AS on4, (SELECT IFNULL(SUM( pm.price ) ,0) AS month6 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '6', '-', '01' ), '%Y-%m')) AS on5, (SELECT IFNULL(SUM( pm.price ) ,0) AS month7 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '7', '-', '01' ), '%Y-%m')) AS on6, (SELECT IFNULL(SUM( pm.price ) ,0) AS month8 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '8', '-', '01' ), '%Y-%m')) AS on7, (SELECT IFNULL(SUM( pm.price ) ,0) AS month9 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '9', '-', '01' ), '%Y-%m')) AS on8, (SELECT IFNULL(SUM( pm.price ) ,0) AS month10 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '10', '-', '01' ), '%Y-%m')) AS on9, (SELECT IFNULL(SUM( pm.price ) ,0) AS month11 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '11', '-', '01' ), '%Y-%m')) AS on10, (SELECT IFNULL(SUM( pm.price ) ,0) AS month12 FROM payment_manage pm WHERE DATE_FORMAT( concat( pm.`year`, '-', pm.`month`, '-', '01' ), '%Y-%m' ) = DATE_FORMAT(concat( DATE_FORMAT( NOW(), '%Y' ), '-', '12', '-', '01' ), '%Y-%m')) AS on11;
2024-03-22 19:24:17.245 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:24:17 | 耗时 0 ms | SQL 语句：
SELECT COUNT( 1 ) AS num, CASE nature WHEN 1 THEN '住宅楼房' WHEN 2 THEN '社区用处' END AS nature FROM houses_info hi GROUP BY hi.nature;
2024-03-22 19:24:21.263 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:21.263 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:41.026 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:41.027 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:41.078 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 19:24:41 | 耗时 1 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:24:41.081 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 19:24:41 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:24:52.617 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:24:52.620 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 19:24:52 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:24:52.623 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 19:24:52 | 耗时 0 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:25:00.501 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:25:00.501 febs [http-nio-9527-exec-4] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:25:00.504 febs [http-nio-9527-exec-4] INFO  p6spy - 2024-03-22 19:25:00 | 耗时 0 ms | SQL 语句：
SELECT ID,name,phone,id_number,images,user_id,create_date,email FROM owner_info;
2024-03-22 19:25:00.540 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 19:25:00 | 耗时 1 ms | SQL 语句：
SELECT COUNT(1) FROM park_info pi LEFT JOIN owner_info oi ON (oi.id = pi.owner_id) WHERE 1 = 1;
2024-03-22 19:25:00.543 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 19:25:00 | 耗时 0 ms | SQL 语句：
SELECT pi.id, pi.`code`, pi.`name`, pi.address, pi.owner_id, pi.remark, pi.create_date, oi.`name` AS ownerName, oi.images, pi.park_size, pi.status, oi.phone FROM park_info pi LEFT JOIN owner_info oi ON ( oi.id = pi.owner_id ) WHERE 1 = 1 ORDER BY pi.create_date DESC LIMIT 0,10;
2024-03-22 19:25:00.902 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:25:00.905 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 19:25:00 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:25:00.908 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 19:25:00 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:25:49.304 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:25:49.307 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:25:49 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:25:49.310 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:25:49 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:26:16.731 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:26:16.734 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:26:16 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:26:16.737 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:26:16 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:26:27.654 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:26:27.657 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 19:26:27 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:26:27.659 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 19:26:27 | 耗时 0 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:27:37.064 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:27:37.067 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:27:37 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:27:37.070 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:27:37 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:27:48.283 febs [http-nio-9527-exec-6] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:27:48.288 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:27:48 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:27:48.292 febs [http-nio-9527-exec-6] INFO  p6spy - 2024-03-22 19:27:48 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' group by tempDay.date;
2024-03-22 19:27:58.975 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:27:58.978 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 19:27:58 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2023' AND DATE_FORMAT(ri.create_date, '%c') = '8' GROUP BY wi.id;
2024-03-22 19:27:58.981 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 19:27:58 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2023-08-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2023-08-22', interval-day('2023-08-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')) where 1 = 1 AND DATE_FORMAT(oi.create_date, '%Y') = '2023' AND DATE_FORMAT(oi.create_date, '%c') = '8' group by tempDay.date;
2024-03-22 19:32:57.641 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 19:32:57.641 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2024-03-22 19:32:57.642 febs [Thread-14] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
2024-03-22 19:32:57.642 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
2024-03-22 19:32:57.642 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
2024-03-22 19:32:57.642 febs [Thread-14] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
2024-03-22 19:32:57.649 febs [Thread-14] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
2024-03-22 19:32:57.651 febs [Thread-14] INFO  c.b.d.d.DynamicRoutingDataSource - closing dynamicDatasource  ing....
2024-03-22 19:32:57.652 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown initiated...
2024-03-22 19:32:57.654 febs [Thread-14] INFO  com.zaxxer.hikari.HikariDataSource - primary - Shutdown completed.
2024-03-22 19:33:00.309 febs [main] INFO  cc.mrbird.febs.FebsApplication - Starting FebsApplication on WIN-KJDA35RA4FP with PID 18060 (started by Administrator in G:\Project\小区房屋报修系统\backend)
2024-03-22 19:33:00.311 febs [main] INFO  cc.mrbird.febs.FebsApplication - No active profile set, falling back to default profiles: default
2024-03-22 19:33:00.976 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-22 19:33:00.978 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data repositories in DEFAULT mode.
2024-03-22 19:33:01.011 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 repository interfaces.
2024-03-22 19:33:01.216 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cc.mrbird.febs.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$9571779e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.295 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.351 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$6fc0c342] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.357 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.359 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.365 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6325271] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cc.mrbird.febs.common.authentication.ShiroConfig$$EnhancerBySpringCGLIB$$71b2541a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cc.mrbird.febs.common.config.RedisConfig$$EnhancerBySpringCGLIB$$6a770b6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.597 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisPoolFactory' of type [redis.clients.jedis.JedisPool] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisService' of type [cc.mrbird.febs.common.service.impl.RedisServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.662 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatisPlusConfig' of type [cc.mrbird.febs.common.config.MybatisPlusConfig$$EnhancerBySpringCGLIB$$57b9ae80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'paginationInterceptor' of type [com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.669 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' of type [com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration$$EnhancerBySpringCGLIB$$43fabf0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceCreator' of type [com.baomidou.dynamic.datasource.DynamicDataSourceCreator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.675 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dynamicDataSourceProvider' of type [com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.678 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-检测到并开启了p6spy
2024-03-22 19:33:01.683 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Starting...
2024-03-22 19:33:01.810 febs [main] INFO  com.zaxxer.hikari.HikariDataSource - primary - Start completed.
2024-03-22 19:33:01.810 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 初始共加载 1 个数据源
2024-03-22 19:33:01.810 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 动态数据源-加载 primary 成功
2024-03-22 19:33:01.810 febs [main] INFO  c.b.d.d.DynamicRoutingDataSource - 当前的默认数据源是单数据源，数据源名为 primary
2024-03-22 19:33:01.810 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.baomidou.dynamic.datasource.DynamicRoutingDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:01.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.317 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.325 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.326 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.348 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.349 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cc.mrbird.febs.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cc.mrbird.febs.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.389 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cc.mrbird.febs.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.408 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy115] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.409 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cc.mrbird.febs.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.426 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.443 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigMapper' of type [com.sun.proxy.$Proxy118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.446 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userConfigService' of type [cc.mrbird.febs.system.service.impl.UserConfigServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoMapper' of type [com.sun.proxy.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.466 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'ownerInfoServiceImpl' of type [cc.mrbird.febs.cos.service.impl.OwnerInfoServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.476 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cc.mrbird.febs.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.492 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$61c5d202] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.495 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$1412941b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.497 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$cf297a0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.501 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.504 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.509 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$f5f4f138] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.513 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.515 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$43d16f91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.525 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.531 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.559 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'cacheService' of type [cc.mrbird.febs.common.service.impl.CacheServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.562 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userManager' of type [cc.mrbird.febs.system.manager.UserManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.563 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cc.mrbird.febs.common.authentication.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.568 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.576 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-03-22 19:33:02.803 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 9527 (http)
2024-03-22 19:33:02.812 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-9527"]
2024-03-22 19:33:02.815 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-03-22 19:33:02.815 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/9.0.12
2024-03-22 19:33:02.820 febs [main] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_201\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;F:\办公软件\Git\cmd;F:\nodejs\;F:\Yarn\bin\;F:\Bandizip\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin;.]
2024-03-22 19:33:02.915 febs [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-03-22 19:33:02.915 febs [main] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2570 ms
2024-03-22 19:33:03.305 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2024-03-22 19:33:03.305 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webMvcMetricsFilter' to: [/*]
2024-03-22 19:33:03.305 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2024-03-22 19:33:03.305 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'formContentFilter' to: [/*]
2024-03-22 19:33:03.306 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2024-03-22 19:33:03.306 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpTraceFilter' to: [/*]
2024-03-22 19:33:03.306 febs [main] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2024-03-22 19:33:03.306 febs [main] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
2024-03-22 19:33:03.821 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'taskExecutor'
2024-03-22 19:33:04.504 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
2024-03-22 19:33:04.510 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2024-03-22 19:33:04.511 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
2024-03-22 19:33:04.511 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
2024-03-22 19:33:04.511 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2024-03-22 19:33:04.511 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
2024-03-22 19:33:04.512 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
2024-03-22 19:33:04.512 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@e5c5e6
2024-03-22 19:33:04.530 febs [main] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2024-03-22 19:33:04.584 febs [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2024-03-22 19:33:04.656 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
2024-03-22 19:33:04.656 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
2024-03-22 19:33:04.668 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-9527"]
2024-03-22 19:33:04.806 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2024-03-22 19:33:04.812 febs [scheduling-1] INFO  cc.mrbird.febs.common.task.CacheTask - delete expired user
2024-03-22 19:33:04.818 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 9527 (http) with context path ''
2024-03-22 19:33:04.819 febs [main] INFO  cc.mrbird.febs.FebsApplication - Started FebsApplication in 4.904 seconds (JVM running for 5.509)
2024-03-22 19:33:04.826 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - Redis连接中 ······
2024-03-22 19:33:04.827 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存初始化 ······
2024-03-22 19:33:04.827 febs [main] INFO  c.m.f.common.runner.CacheInitRunner - 缓存用户数据 ······
2024-03-22 19:33:04.870 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 3 ms | SQL 语句：
SELECT USER_ID,username,password,dept_id,email,mobile,status,create_time,modify_time,last_login_time,ssex,description,avatar FROM t_user;
2024-03-22 19:33:04.883 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 3 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'mrbird' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:33:04.929 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'mrbird';
2024-03-22 19:33:04.941 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 2 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'mrbird' and m.perms is not null and m.perms <> '';
2024-03-22 19:33:04.952 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 1 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='1' ;
2024-03-22 19:33:04.956 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 1 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'scott' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:33:04.959 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'scott';
2024-03-22 19:33:04.961 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'scott' and m.perms is not null and m.perms <> '';
2024-03-22 19:33:04.964 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='2' ;
2024-03-22 19:33:04.966 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'jack' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:33:04.969 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'jack';
2024-03-22 19:33:04.971 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'jack' and m.perms is not null and m.perms <> '';
2024-03-22 19:33:04.973 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='12' ;
2024-03-22 19:33:04.976 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'admin' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:33:04.978 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin';
2024-03-22 19:33:04.980 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'admin' and m.perms is not null and m.perms <> '';
2024-03-22 19:33:04.982 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='13' ;
2024-03-22 19:33:04.986 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 2 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'fank' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:33:04.988 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'fank';
2024-03-22 19:33:04.991 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'fank' and m.perms is not null and m.perms <> '';
2024-03-22 19:33:04.992 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='14' ;
2024-03-22 19:33:04.994 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT u.user_id userId, u.username, u.password, u.email, u.mobile, u. STATUS, u.create_time createTime, u.ssex, d.dept_id deptId, d.dept_name deptName, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME lastLoginTime, GROUP_CONCAT(r.role_id) roleId, GROUP_CONCAT(r.ROLE_NAME) roleName FROM t_user u LEFT JOIN t_dept d ON (u.dept_id = d.dept_id) LEFT JOIN t_user_role ur ON (u.user_id = ur.user_id) LEFT JOIN t_role r ON r.role_id = ur.role_id WHERE u.username = 'sungou' group by u.username, u.user_id, u.password, u.email, u.mobile, u.STATUS, u.create_time, u.ssex, d.dept_id, d.dept_name, u.AVATAR, u.DESCRIPTION, u.LAST_LOGIN_TIME;
2024-03-22 19:33:04.996 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select r.* from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'sungou';
2024-03-22 19:33:04.998 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
select distinct m.perms from t_role r left join t_user_role ur on (r.role_id = ur.role_id) left join t_user u on (u.user_id = ur.user_id) left join t_role_menu rm on (rm.role_id = r.role_id) left join t_menu m on (m.menu_id = rm.menu_id) where u.username = 'sungou' and m.perms is not null and m.perms <> '';
2024-03-22 19:33:04.999 febs [main] INFO  p6spy - 2024-03-22 19:33:04 | 耗时 0 ms | SQL 语句：
SELECT USER_ID,theme,layout,multi_page,fix_siderbar,fix_header,color FROM t_user_config WHERE USER_ID='15' ;
2024-03-22 19:33:04.999 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -  __    ___   _      ___   _     ____ _____  ____ 
2024-03-22 19:33:04.999 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - / /`  / / \ | |\/| | |_) | |   | |_   | |  | |_  
2024-03-22 19:33:04.999 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - \_\_, \_\_/ |_|  | |_|   |_|__ |_|__  |_|  |_|__ 
2024-03-22 19:33:04.999 febs [main] INFO  c.m.f.common.runner.StartedUpRunner -                                                       
2024-03-22 19:33:04.999 febs [main] INFO  c.m.f.common.runner.StartedUpRunner - FEBS 启动完毕，时间：2024-03-22T19:33:04.999
2024-03-22 19:33:05.461 febs [RMI TCP Connection(6)-192.168.1.5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-22 19:33:05.461 febs [RMI TCP Connection(6)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-03-22 19:33:05.470 febs [RMI TCP Connection(6)-192.168.1.5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2024-03-22 19:33:05.471 febs [RMI TCP Connection(5)-192.168.1.5] INFO  p6spy - 2024-03-22 19:33:05 | 耗时 0 ms | SQL 语句：
/* ping */ SELECT 1;
2024-03-22 19:33:08.576 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:33:08.639 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 19:33:08 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2023' AND DATE_FORMAT(ri.create_date, '%c') = '8' GROUP BY wi.id;
2024-03-22 19:33:08.642 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 19:33:08 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2023-08-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2023-08-22', interval-day('2023-08-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2023' AND DATE_FORMAT(oi.create_date, '%c') = '8' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:33:25.247 febs [http-nio-9527-exec-2] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:33:25.251 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:33:25 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:33:25.254 febs [http-nio-9527-exec-2] INFO  p6spy - 2024-03-22 19:33:25 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:35:24.643 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:35:24.649 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 19:35:24 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:35:24.653 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 19:35:24 | 耗时 2 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:35:28.883 febs [http-nio-9527-exec-8] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:35:28.888 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 19:35:28 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:35:28.893 febs [http-nio-9527-exec-8] INFO  p6spy - 2024-03-22 19:35:28 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:35:38.939 febs [http-nio-9527-exec-10] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:35:38.942 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:35:38 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2023' AND DATE_FORMAT(ri.create_date, '%c') = '8' GROUP BY wi.id;
2024-03-22 19:35:38.945 febs [http-nio-9527-exec-10] INFO  p6spy - 2024-03-22 19:35:38 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2023-08-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2023-08-22', interval-day('2023-08-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2023' AND DATE_FORMAT(oi.create_date, '%c') = '8' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:36:09.776 febs [http-nio-9527-exec-3] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:36:09.779 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 19:36:09 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2023' AND DATE_FORMAT(ri.create_date, '%c') = '9' GROUP BY wi.id;
2024-03-22 19:36:09.782 febs [http-nio-9527-exec-3] INFO  p6spy - 2024-03-22 19:36:09 | 耗时 0 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2023-09-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2023-09-22', interval-day('2023-09-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2023' AND DATE_FORMAT(oi.create_date, '%c') = '9' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:38:43.482 febs [http-nio-9527-exec-5] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:38:43.485 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 19:38:43 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:38:43.487 febs [http-nio-9527-exec-5] INFO  p6spy - 2024-03-22 19:38:43 | 耗时 0 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:39:03.597 febs [http-nio-9527-exec-7] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:39:03.600 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 19:39:03 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:39:03.602 febs [http-nio-9527-exec-7] INFO  p6spy - 2024-03-22 19:39:03 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:39:59.579 febs [http-nio-9527-exec-9] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:39:59.582 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 19:39:59 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2024' AND DATE_FORMAT(ri.create_date, '%c') = '3' GROUP BY wi.id;
2024-03-22 19:39:59.586 febs [http-nio-9527-exec-9] INFO  p6spy - 2024-03-22 19:39:59 | 耗时 1 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2024-03-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2024-03-22', interval-day('2024-03-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2024' AND DATE_FORMAT(oi.create_date, '%c') = '3' ) where 1 = 1 group by tempDay.date;
2024-03-22 19:40:16.431 febs [http-nio-9527-exec-1] INFO  c.m.f.common.authentication.JWTUtil - token is valid
2024-03-22 19:40:16.434 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 19:40:16 | 耗时 0 ms | SQL 语句：
SELECT wi.NAME, count( wi.id ) as num FROM repair_info ri LEFT JOIN worker_info wi ON ( wi.id = ri.worker ) WHERE 1 = 1 AND DATE_FORMAT(ri.create_date, '%Y') = '2023' AND DATE_FORMAT(ri.create_date, '%c') = '8' GROUP BY wi.id;
2024-03-22 19:40:16.436 febs [http-nio-9527-exec-1] INFO  p6spy - 2024-03-22 19:40:16 | 耗时 0 ms | SQL 语句：
select tempDay.date, count(oi.id) as count from ( select date from ( select DATE_FORMAT(DATE_SUB(last_day('2023-08-22'), interval xc-1 day), '%Y-%m-%d') as date from ( select @xi := @xi + 1 as xc from ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc1, ( select 1 union select 2 union select 3 union select 4 union select 5 union select 6) xc2, ( select @xi := 0) xc0 ) xcxc) x0 where x0.date >= ( select date_add('2023-08-22', interval-day('2023-08-22')+ 1 day))) as tempDay left join repair_info oi on (DATE_FORMAT( oi.create_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d') AND DATE_FORMAT(oi.create_date, '%Y') = '2023' AND DATE_FORMAT(oi.create_date, '%c') = '8' ) where 1 = 1 group by tempDay.date;
